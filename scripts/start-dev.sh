#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ dev —Å—Ä–µ–¥—ã –Ω–∞ –¥–æ–º–µ–Ω–µ dev.–ø—Ä–∏–±—ã–ª.—Ä—Ñ

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ dev —Å—Ä–µ–¥—ã..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -f "./env.development" ]; then
    echo "‚ùå –§–∞–π–ª env.development –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª env.development –Ω–∞ –æ—Å–Ω–æ–≤–µ env.staging"
    exit 1
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –¥—Ä—É–≥–∏–µ —Å—Ä–µ–¥—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥—Ä—É–≥–∏–µ —Å—Ä–µ–¥—ã..."
docker compose down 2>/dev/null || true
docker compose -f docker-compose.staging.yml down 2>/dev/null || true
docker compose -f docker-compose.prod.yml down 2>/dev/null || true

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è dev
export $(cat ./env.development | grep -v '^#' | xargs)

# –ó–∞–ø—É—Å–∫–∞–µ–º dev —Å—Ä–µ–¥—É
echo "üîß –ó–∞–ø—É—Å–∫–∞–µ–º dev —Å—Ä–µ–¥—É..."
docker compose -f docker-compose.dev.yml up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker compose -f docker-compose.dev.yml ps

echo ""
echo "‚úÖ Dev —Å—Ä–µ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞!"
echo "üåê Frontend: http://dev.–ø—Ä–∏–±—ã–ª.—Ä—Ñ"
echo "üîß Backend API: http://dev.–ø—Ä–∏–±—ã–ª.—Ä—Ñ/api"
echo "ü§ñ Bot webhook: http://dev.–ø—Ä–∏–±—ã–ª.—Ä—Ñ/bot"
echo "üíæ Database: localhost:5434"
echo ""
echo "üî• Hot reload –≤–∫–ª—é—á–µ–Ω - –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å—Å—è!"
echo ""
echo "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "  docker compose -f docker-compose.dev.yml logs -f"
echo ""
echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "  docker compose -f docker-compose.dev.yml down"
echo ""
echo "–î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ production:"
echo "  ./scripts/switch-to-production.sh" 