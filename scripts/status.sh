#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å—Ä–µ–¥
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/status.sh

set -e

echo "üìä Checking status of all environments..."
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üîç Local containers:"
if docker-compose ps 2>/dev/null | grep -q "Up"; then
    echo "‚úÖ Local containers are running"
    docker-compose ps
else
    echo "‚ùå No local containers running"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º dev –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üîç Development containers:"
if docker-compose -f docker-compose.dev-server.yml ps 2>/dev/null | grep -q "Up"; then
    echo "‚úÖ Development containers are running"
    docker-compose -f docker-compose.dev-server.yml ps
else
    echo "‚ùå No development containers running"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º staging –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üîç Staging containers:"
if docker-compose -f docker-compose.staging.yml ps 2>/dev/null | grep -q "Up"; then
    echo "‚úÖ Staging containers are running"
    docker-compose -f docker-compose.staging.yml ps
else
    echo "‚ùå No staging containers running"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üîç Production containers:"
if docker-compose -f docker-compose.prod.yml ps 2>/dev/null | grep -q "Up"; then
    echo "‚úÖ Production containers are running"
    docker-compose -f docker-compose.prod.yml ps
else
    echo "‚ùå No production containers running"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º DNS
echo "üåê DNS Status:"
echo "Checking domain resolution..."

# –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω
if nslookup –ø—Ä–∏–±—ã–ª.—Ä—Ñ > /dev/null 2>&1; then
    echo "‚úÖ –ø—Ä–∏–±—ã–ª.—Ä—Ñ resolves correctly"
else
    echo "‚ùå –ø—Ä–∏–±—ã–ª.—Ä—Ñ DNS resolution failed"
fi

# Dev –ø–æ–¥–¥–æ–º–µ–Ω
if nslookup dev.–ø—Ä–∏–±—ã–ª.—Ä—Ñ > /dev/null 2>&1; then
    echo "‚úÖ dev.–ø—Ä–∏–±—ã–ª.—Ä—Ñ resolves correctly"
else
    echo "‚ùå dev.–ø—Ä–∏–±—ã–ª.—Ä—Ñ DNS resolution failed"
fi

# Staging –ø–æ–¥–¥–æ–º–µ–Ω
if nslookup staging.–ø—Ä–∏–±—ã–ª.—Ä—Ñ > /dev/null 2>&1; then
    echo "‚úÖ staging.–ø—Ä–∏–±—ã–ª.—Ä—Ñ resolves correctly"
else
    echo "‚ùå staging.–ø—Ä–∏–±—ã–ª.—Ä—Ñ DNS resolution failed"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üåê Service Availability:"

# Production
echo "Checking production (https://–ø—Ä–∏–±—ã–ª.—Ä—Ñ)..."
if curl -f -s https://–ø—Ä–∏–±—ã–ª.—Ä—Ñ/health > /dev/null 2>&1; then
    echo "‚úÖ Production is accessible"
else
    echo "‚ùå Production is not accessible"
fi

# Development
echo "Checking development (https://dev.–ø—Ä–∏–±—ã–ª.—Ä—Ñ)..."
if curl -f -s https://dev.–ø—Ä–∏–±—ã–ª.—Ä—Ñ/health > /dev/null 2>&1; then
    echo "‚úÖ Development is accessible"
else
    echo "‚ùå Development is not accessible"
fi

# Staging
echo "Checking staging (https://staging.–ø—Ä–∏–±—ã–ª.—Ä—Ñ)..."
if curl -f -s https://staging.–ø—Ä–∏–±—ã–ª.—Ä—Ñ/health > /dev/null 2>&1; then
    echo "‚úÖ Staging is accessible"
else
    echo "‚ùå Staging is not accessible"
fi
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã (–µ—Å–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
if [ "$(whoami)" = "root" ]; then
    echo "üîê SSL Certificates:"
    if command -v certbot &> /dev/null; then
        certbot certificates
    else
        echo "‚ö†Ô∏è Certbot not installed"
    fi
    echo ""
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
echo "üõ†Ô∏è Management Commands:"
echo "  ./scripts/deploy-dev.sh        - Deploy to development"
echo "  ./scripts/deploy-staging.sh    - Deploy to staging"
echo "  ./scripts/deploy-production.sh - Deploy to production"
echo "  ./scripts/server-manage.sh dev - Manage dev on server"
echo "  ./scripts/server-manage.sh staging - Manage staging on server"
echo "  ./scripts/server-manage.sh prod - Manage production on server"
echo ""

echo "üìä Status check completed!" 