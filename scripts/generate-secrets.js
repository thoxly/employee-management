#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/generate-secrets.js
 */

const crypto = require('crypto');

console.log('üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π\n');

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è JWT —Å–µ–∫—Ä–µ—Ç–æ–≤
const accessSecret = crypto.randomBytes(64).toString('hex');
const refreshSecret = crypto.randomBytes(64).toString('hex');

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è –¥–ª—è –ë–î
const dbPassword = crypto.randomBytes(32).toString('hex');

console.log('‚úÖ JWT Access Secret:');
console.log(accessSecret);
console.log('\n‚úÖ JWT Refresh Secret:');
console.log(refreshSecret);
console.log('\n‚úÖ Database Password:');
console.log(dbPassword);

console.log('\nüìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ .env —Ñ–∞–π–ª—ã:');
console.log('\nJWT_ACCESS_SECRET=' + accessSecret);
console.log('JWT_REFRESH_SECRET=' + refreshSecret);
console.log('DB_PASSWORD=' + dbPassword);

console.log('\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –•—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –∫–ª—é—á–∏ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!');
console.log('‚ö†Ô∏è  –ù–µ –∫–æ–º–º–∏—Ç—å—Ç–µ –∏—Ö –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π!'); 