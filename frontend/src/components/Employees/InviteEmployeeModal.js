import React, { useState, useEffect } from 'react';
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Typography,
  Box,
  Chip,
  CircularProgress,
  Alert,
} from '@mui/material';
import { Telegram } from '@mui/icons-material';
import { api } from '../../utils/api';
import { useAuthContext } from '../../context/AuthContext';

const InviteEmployeeModal = ({ show, onClose, onSuccess }) => {
  const [inviteCode, setInviteCode] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');
  const [isCodeGenerated, setIsCodeGenerated] = useState(false);
  const { user } = useAuthContext();

  useEffect(() => {
    if (show && !isCodeGenerated) {
      generateInviteCode();
    }
  }, [show, isCodeGenerated]);

  const generateInviteCode = async () => {
    setLoading(true);
    setError('');
    setSuccess('');
    
    try {
      const data = await api.employees.generateInvite();
      setInviteCode(data.invite_code);
      setIsCodeGenerated(true);
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  const handleSubmit = async () => {
    setLoading(true);
    setError('');
    setSuccess('');

    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω–≤–∞–π—Ç-–∫–æ–¥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤–º–µ—Å—Ç–µ —Å ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ manager_id
      await api.employees.invite({
        username: `user_${Date.now()}`, // –í—Ä–µ–º–µ–Ω–Ω—ã–π username, –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        invite_code: inviteCode,
        manager_id: user.id // –î–æ–±–∞–≤–ª—è–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ manager_id
      });

      setSuccess('–ò–Ω–≤–∞–π—Ç-–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ!');

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Web App API
      const text = encodeURIComponent(
        `–ü—Ä–∏–≤–µ—Ç! –í–∞—à –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:\n${inviteCode}\n\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –±–æ—Ç–∞ üëâ @arrived_rf_bot –∏ –Ω–∞–∂–º–∏—Ç–µ "Start".\n–ë–æ—Ç –ø–æ–ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –∫–æ–¥ ‚Äî –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ, —á—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–∏—Å—Ç–µ–º–µ.`
      );
      
      const tgLink = `tg://msg_url?url=&text=${text}`;
      const shareLink = `https://t.me/share/url?url=&text=${text}`;
      
      // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      try {
        window.location.href = tgLink;
      } catch (e) {
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤–µ–±-–≤–µ—Ä—Å–∏—é
        window.open(shareLink, '_blank');
      }

      onSuccess();
      handleClose();
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  const handleClose = () => {
    setInviteCode('');
    setError('');
    setSuccess('');
    setLoading(false);
    setIsCodeGenerated(false);
    onClose();
  };

  return (
    <Dialog 
      open={show} 
      onClose={handleClose} 
      maxWidth="sm" 
      fullWidth
      PaperProps={{
        sx: {
          borderRadius: 2,
        }
      }}
    >
      <DialogTitle sx={{ pb: 1 }}>
        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
          <Telegram sx={{ color: 'primary.main' }} />
          <Typography variant="h6">
            –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
          </Typography>
        </Box>
      </DialogTitle>

      <DialogContent sx={{ pt: 2 }}>
        {error && (
          <Alert severity="error" sx={{ mb: 2 }}>
            {error}
          </Alert>
        )}

        {success && (
          <Alert severity="success" sx={{ mb: 2 }}>
            {success}
          </Alert>
        )}

        <Typography variant="body2" color="text.secondary" sx={{ mb: 3 }}>
          –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω–≤–∞–π—Ç-–∫–æ–¥ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ" –∫–æ–¥ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ –∏ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è Telegram —Å –≥–æ—Ç–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.
        </Typography>

        {loading && !isCodeGenerated ? (
          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
            <CircularProgress size={20} />
            <Typography variant="body2" color="text.secondary">
              –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω–≤–∞–π—Ç-–∫–æ–¥–∞...
            </Typography>
          </Box>
        ) : inviteCode && (
          <Box sx={{ mb: 2 }}>
            <Typography variant="body2" color="text.secondary" gutterBottom>
              –ò–Ω–≤–∞–π—Ç-–∫–æ–¥ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:
            </Typography>
            <Chip
              label={inviteCode}
              variant="outlined"
              sx={{ 
                fontFamily: 'monospace', 
                fontSize: '1.1rem',
                fontWeight: 600,
                backgroundColor: 'background.paper',
                borderColor: 'primary.main',
                color: 'primary.main',
              }}
            />
          </Box>
        )}

        <Typography variant="body2" color="text.secondary">
          –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ" –∏–Ω–≤–∞–π—Ç-–∫–æ–¥ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ –∏ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è Telegram —Å –≥–æ—Ç–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        </Typography>
      </DialogContent>

      <DialogActions sx={{ p: 3, pt: 1 }}>
        <Button 
          onClick={handleClose} 
          disabled={loading}
        >
          –û—Ç–º–µ–Ω–∞
        </Button>
        <Button
          onClick={handleSubmit}
          variant="contained"
          disabled={loading || !inviteCode}
          startIcon={loading ? <CircularProgress size={16} /> : <Telegram />}
        >
          {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ'}
        </Button>
      </DialogActions>
    </Dialog>
  );
};

export default InviteEmployeeModal; 