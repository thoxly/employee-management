const fetch = require('node-fetch');
const crypto = require('crypto');

const BASE_URL = 'http://localhost:3003/api/auth';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ initData (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
function createTestInitData(telegramId, botToken) {
    const user = {
        id: telegramId,
        first_name: 'Test',
        last_name: 'User',
        username: 'testuser',
        language_code: 'ru'
    };

    const params = new URLSearchParams();
    params.set('user', JSON.stringify(user));
    params.set('auth_date', Math.floor(Date.now() / 1000).toString());
    params.set('query_id', 'test_query_id');
    params.set('chat_instance', 'test_chat_instance');
    params.set('chat_type', 'private');

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ö–µ—à
    const dataCheckString = Array.from(params.entries())
        .sort(([a], [b]) => a.localeCompare(b))
        .map(([key, value]) => `${key}=${value}`)
        .join('\n');

    const secretKey = crypto
        .createHmac('sha256', 'WebAppData')
        .update(botToken)
        .digest();

    const hash = crypto
        .createHmac('sha256', secretKey)
        .update(dataCheckString)
        .digest('hex');

    params.set('hash', hash);
    
    return params.toString();
}

async function testTelegramWebAppAuth() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram WebApp –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...\n');

    try {
        // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('1. –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        
        const testTelegramId = 123456789; // –¢–µ—Å—Ç–æ–≤—ã–π Telegram ID
        const botToken = process.env.BOT_TOKEN || 'your-bot-token-here';
        
        const initData = createTestInitData(testTelegramId, botToken);
        
        const authResponse = await fetch(`${BASE_URL}/telegram-web-app`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                initData: initData
            }),
        });

        console.log('Status:', authResponse.status);
        
        if (authResponse.ok) {
            const authData = await authResponse.json();
            console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
            console.log('   User ID:', authData.user.id);
            console.log('   Telegram ID:', authData.user.telegram_id);
            console.log('   Full Name:', authData.user.full_name);
            console.log('   Has Access Token:', !!authData.accessToken);
        } else {
            const errorData = await authResponse.json();
            console.log('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', errorData.message);
            
            if (errorData.needsRegistration) {
                console.log('   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω - —ç—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ ID');
            }
        }

        // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º initData
        console.log('\n2. –¢–µ—Å—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º initData...');
        
        const invalidResponse = await fetch(`${BASE_URL}/telegram-web-app`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                initData: 'invalid_init_data'
            }),
        });

        console.log('Status:', invalidResponse.status);
        
        if (!invalidResponse.ok) {
            const errorData = await invalidResponse.json();
            console.log('‚úÖ –û—à–∏–±–∫–∞ –æ–∂–∏–¥–∞–µ–º–∞:', errorData.message);
        } else {
            console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —É—Å–ø–µ—Ö —Å –Ω–µ–≤–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
        }

        // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ initData
        console.log('\n3. –¢–µ—Å—Ç –±–µ–∑ initData...');
        
        const noDataResponse = await fetch(`${BASE_URL}/telegram-web-app`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({}),
        });

        console.log('Status:', noDataResponse.status);
        
        if (!noDataResponse.ok) {
            const errorData = await noDataResponse.json();
            console.log('‚úÖ –û—à–∏–±–∫–∞ –æ–∂–∏–¥–∞–µ–º–∞:', errorData.message);
        } else {
            console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —É—Å–ø–µ—Ö –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö');
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testTelegramWebAppAuth(); 