const fetch = require('node-fetch');

const BASE_URL = 'http://localhost:3001/api/employees';

async function testEmployeesAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...\n');

  try {
    // –¢–µ—Å—Ç 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω–≤–∞–π—Ç-–∫–æ–¥–∞
    console.log('1. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω–≤–∞–π—Ç-–∫–æ–¥–∞...');
    const generateResponse = await fetch(`${BASE_URL}/generate-invite`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
    });

    if (generateResponse.ok) {
      const generateData = await generateResponse.json();
      console.log('‚úÖ –ò–Ω–≤–∞–π—Ç-–∫–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:', generateData.invite_code);
      
      // –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
      console.log('\n2. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è...');
      const inviteResponse = await fetch(`${BASE_URL}/invite`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          username: 'test_user',
          invite_code: generateData.invite_code,
        }),
      });

      if (inviteResponse.ok) {
        const inviteData = await inviteResponse.json();
        console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', inviteData.message);
        console.log('   –°–æ—Ç—Ä—É–¥–Ω–∏–∫ ID:', inviteData.employee.id);
      } else {
        const errorData = await inviteResponse.json();
        console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', errorData.message);
      }

      // –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
      console.log('\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...');
      const listResponse = await fetch(`${BASE_URL}/`);

      if (listResponse.ok) {
        const listData = await listResponse.json();
        console.log('‚úÖ –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ–ª—É—á–µ–Ω');
        console.log('   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:', listData.employees.length);
        
        if (listData.employees.length > 0) {
          console.log('   –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫:', listData.employees[0].username);
        }
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤');
      }

    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω–≤–∞–π—Ç-–∫–æ–¥–∞');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testEmployeesAPI(); 