events {
    worker_connections 1024;
}

http {
    upstream frontend_staging {
        server frontend:3002;
    }

    upstream backend_staging {
        server backend:3003;
    }

    upstream bot_staging {
        server bot:3004;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # HTTP server for staging (без SSL для отладки)
    server {
        listen 80;
        server_name dev.прибыл.рф dev.xn--90anknf2e.xn--p1ai localhost;

        # Frontend (React app) - все остальные запросы
        location / {
            proxy_pass http://frontend_staging;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Обработка ошибок 404 для SPA
            proxy_intercept_errors on;
            error_page 404 = @fallback;
        }

        # Fallback для SPA - все запросы возвращают index.html
        location @fallback {
            proxy_pass http://frontend_staging;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Backend API
        location /api/ {
            proxy_pass http://backend_staging;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Bot webhook
        location /bot/ {
            proxy_pass http://bot_staging;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "staging debug healthy\n";
            add_header Content-Type text/plain;
        }

        # Debug endpoint
        location /debug {
            access_log off;
            return 200 "nginx staging debug mode\n";
            add_header Content-Type text/plain;
        }
    }
} 