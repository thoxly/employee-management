const userService = require('../../services/user.service');
const locationService = require('../../services/location.service');

/**
 * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
 */
const statusHandler = async (ctx) => {
    const telegramId = ctx.from.id;
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = await userService.getUserByTelegramId(telegramId);
        if (!user) {
            return ctx.reply('‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.');
        }

        // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é
        const activeSession = await locationService.getActiveSession(user.id);
        
        if (!activeSession) {
            return ctx.reply(
                'üìç –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ.\n\n' +
                '–î–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å live-–ª–æ–∫–∞—Ü–∏–µ–π.'
            );
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        const lastUpdate = locationService.getLastLocationTime(telegramId);
        const lastUpdateText = lastUpdate 
            ? new Date(lastUpdate).toLocaleString('ru-RU')
            : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö';

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–∞—á–µ
        let taskInfo = '';
        if (activeSession.task_id) {
            const task = await locationService.getUserActiveTask(user.id);
            if (task) {
                taskInfo = `\nüìã –ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞–¥–∞—á–∞: ${task.title}`;
            }
        } else {
            taskInfo = '\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–¥–∞—á–∏';
        }

        const statusIcon = activeSession.is_active ? 'üü¢' : 'üî¥';
        const statusText = activeSession.is_active ? '–ê–∫—Ç–∏–≤–Ω–æ' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–æ';

        return ctx.reply(
            `üìç –°—Ç–∞—Ç—É—Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏:\n\n` +
            `${statusIcon} –°—Ç–∞—Ç—É—Å: ${statusText}\n` +
            `üïê –ù–∞—á–∞–ª–æ —Å–µ—Å—Å–∏–∏: ${new Date(activeSession.start_time).toLocaleString('ru-RU')}\n` +
            `üì± –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${lastUpdateText}` +
            taskInfo
        );

    } catch (error) {
        console.error('‚ùå Error in status handler:', error);
        return ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞.');
    }
};

/**
 * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
 */
const stopTrackingHandler = async (ctx) => {
    const telegramId = ctx.from.id;
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = await userService.getUserByTelegramId(telegramId);
        if (!user) {
            return ctx.reply('‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.');
        }

        // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é
        const activeSession = await locationService.getActiveSession(user.id);
        
        if (!activeSession) {
            return ctx.reply('üìç –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ —É–∂–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ.');
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞
        if (activeSession.task_id) {
            const task = await locationService.getUserActiveTask(user.id);
            if (task && task.status === 'in-progress') {
                return ctx.reply(
                    '‚ö†Ô∏è –ù–µ–ª—å–∑—è –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.\n\n' +
                    '–°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é –∑–∞–¥–∞—á—É –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ.'
                );
            }
        }

        // –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é
        await locationService.endSession(activeSession.id);
        
        // –£–¥–∞–ª—è–µ–º –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        locationService.lastLocationUpdate.delete(telegramId);

        return ctx.reply('üõë –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.');

    } catch (error) {
        console.error('‚ùå Error in stop tracking handler:', error);
        return ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.');
    }
};

module.exports = {
    statusHandler,
    stopTrackingHandler
}; 